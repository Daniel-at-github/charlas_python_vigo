<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="terminal" baseProfile="full" viewBox="0 0 687 554" width="687" version="1.1">
    <defs>
        <termtosvg:template_settings xmlns:termtosvg="https://github.com/nbedos/termtosvg">
            <termtosvg:screen_geometry columns="80" rows="24"/>
            <termtosvg:animation type="waapi"/>
        </termtosvg:template_settings>
        <style type="text/css" id="generated-style"><![CDATA[
        #screen {
            font-family: 'DejaVu Sans Mono', monospace;
            font-style: normal;
            font-size: 14px;
        }

        text {
            dominant-baseline: text-before-edge;
            white-space: pre;
        }
    ]]></style>
        <style type="text/css" id="user-style">
            /* The colors defined below are the default 16 colors used for rendering text of the terminal. Adjust
               them as needed.
               gjm8 color theme (source: https://terminal.sexy/) */
            .foreground {fill: #c5c5c5;}
            .background {fill: #1c1c1c;}
            .color0 {fill: #1c1c1c;}
            .color1 {fill: #ff005b;}
            .color2 {fill: #cee318;}
            .color3 {fill: #ffe755;}
            .color4 {fill: #048ac7;}
            .color5 {fill: #833c9f;}
            .color6 {fill: #0ac1cd;}
            .color7 {fill: #e5e5e5;}
            .color8 {fill: #1c1c1c;}
            .color9 {fill: #ff005b;}
            .color10 {fill: #cee318;}
            .color11 {fill: #ffe755;}
            .color12 {fill: #048ac7;}
            .color13 {fill: #833c9f;}
            .color14 {fill: #0ac1cd;}
            .color15 {fill: #e5e5e5;}
            #play-button {
                transform: translate(30px, calc(100% - 45px));
            }
            #pause-button {
                transform: translate(30px, calc(100% - 45px));
            }
            #wide_track {
                transform: translate(150px, calc(100% - 45px));
            }
            #track {
                transform: translate(150px, calc(100% - 33px));
            }
            #slider_button {
                transform: translate(0px, calc(100% - 30px));
            }
            #timer {
                transform: translate(60px, calc(100% - 38px));
                font-family: 'DejaVu Sans Mono', monospace;
                font-style: normal;
                font-size: 14px;
            }
        </style>
        <rect id="slider_wide_track" height="30px" width="65%"/>
        <rect id="slider_track" height="6px" width="65%"/>
        <circle id="slider_button" r="10px" class="color1"/>
        <g id="icon-play">
            <rect x="-5" y="0" width="25" height="30" class="background"/>
            <path d="M0 4l14 11-14 11z"/>
        </g>
        <g id="icon-pause">
            <rect x="-5" y="0" width="25" height="30" class="background"/>
            <rect x="0" y="5" width="5" height="20"/>
            <rect x="10" y="5" width="5" height="20"/>
        </g>
    </defs>
    <rect id="terminalui" class="background" width="100%" height="100%" ry="4.5826941"/>
    <circle cx="24" cy="23" r="7" class="color1"/>
    <circle cx="44" cy="23" r="7" class="color3"/>
    <circle cx="64" cy="23" r="7" class="color2"/>
    <svg id="screen" width="640" height="408" x="23" y="50" viewBox="0 0 640 408" preserveAspectRatio="xMidYMin slice">
        <rect class="background" height="100%" width="100%" x="0" y="0"/><defs><g id="g1"><text x="0" textLength="296" class="foreground">ansible -i inventory.yaml -m ping all</text></g><g id="g2"><text x="0" textLength="8" class="background"> </text></g><g id="g3"><text x="0" textLength="400" font-weight="bold" class="color14">charla_2019-12-19__Iniciaci&#243;n_a_Ansible/ejemplos/1</text><text x="400" textLength="40" class="foreground"> via </text><text x="440" textLength="200" font-weight="bold" class="color11">&#128013; v3.6.9 (charla_2019-12</text></g><g id="g4"><text x="0" textLength="280" font-weight="bold" class="color11">-19__Iniciaci&#243;n_a_Ansible-ParURKFk)</text><text x="280" textLength="8" class="foreground"> </text></g><g id="g5"><text x="0" textLength="8" font-weight="bold" class="color10">&#10095;</text><text x="8" textLength="304" class="foreground"> ansible -i inventory.yaml -m ping all</text></g><g id="g6"><text x="0" textLength="184" class="color2">server_1 | SUCCESS =&gt; {</text><text x="184" textLength="8" class="background"> </text></g><g id="g7"><text x="0" textLength="184" class="color2">server_1 | SUCCESS =&gt; {</text></g><g id="g8"><text x="0" textLength="168" class="color2">    "changed": false,</text></g><g id="g9"><text x="0" textLength="144" class="color2">    "ping": "pong"</text></g><g id="g10"><text x="0" textLength="8" class="color2">}</text></g><g id="g11"><text x="0" textLength="184" class="color2">server_2 | SUCCESS =&gt; {</text></g><g id="g12"><text x="0" textLength="184" class="color2">server_n | SUCCESS =&gt; {</text></g><g id="g13"><text x="0" textLength="280" font-weight="bold" class="color11">-19__Iniciaci&#243;n_a_Ansible-ParURKFk)</text><text x="280" textLength="8" class="foreground"> </text><text x="288" textLength="64" font-weight="bold" class="color11">took 16s</text><text x="352" textLength="8" class="foreground"> </text></g><g id="g14"><text x="0" textLength="8" font-weight="bold" class="color10">&#10095;</text><text x="8" textLength="8" class="foreground"> </text><text x="16" textLength="8" class="background"> </text></g><g id="g15"><text x="0" textLength="8" font-weight="bold" class="color10">&#10095;</text><text x="8" textLength="40" class="foreground"> exit</text><text x="48" textLength="8" class="background"> </text></g><g id="g16"><text x="0" textLength="8" font-weight="bold" class="color10">&#10095;</text><text x="8" textLength="40" class="foreground"> exit</text></g></defs><g id="screen_view"><g><use xlink:href="#g1" y="0"/><rect x="0" y="17" width="8" height="17" class="foreground"/><use xlink:href="#g2" y="17"/></g><g><use xlink:href="#g1" y="442"/><rect x="0" y="476" width="8" height="17" class="foreground"/><use xlink:href="#g2" y="476"/></g><g><use xlink:href="#g1" y="884"/><use xlink:href="#g3" y="918"/><use xlink:href="#g4" y="935"/><use xlink:href="#g5" y="952"/><rect x="0" y="969" width="8" height="17" class="foreground"/><use xlink:href="#g2" y="969"/></g><g><use xlink:href="#g1" y="1326"/><use xlink:href="#g3" y="1360"/><use xlink:href="#g4" y="1377"/><use xlink:href="#g5" y="1394"/><rect x="184" y="1411" width="8" height="17" class="foreground"/><use xlink:href="#g6" y="1411"/></g><g><use xlink:href="#g1" y="1768"/><use xlink:href="#g3" y="1802"/><use xlink:href="#g4" y="1819"/><use xlink:href="#g5" y="1836"/><use xlink:href="#g7" y="1853"/><use xlink:href="#g8" y="1870"/><use xlink:href="#g9" y="1887"/><use xlink:href="#g10" y="1904"/><rect x="0" y="1921" width="8" height="17" class="foreground"/><use xlink:href="#g2" y="1921"/></g><g><use xlink:href="#g1" y="2210"/><use xlink:href="#g3" y="2244"/><use xlink:href="#g4" y="2261"/><use xlink:href="#g5" y="2278"/><use xlink:href="#g7" y="2295"/><use xlink:href="#g8" y="2312"/><use xlink:href="#g9" y="2329"/><use xlink:href="#g10" y="2346"/><use xlink:href="#g11" y="2363"/><use xlink:href="#g8" y="2380"/><use xlink:href="#g9" y="2397"/><use xlink:href="#g10" y="2414"/><use xlink:href="#g12" y="2431"/><use xlink:href="#g8" y="2448"/><use xlink:href="#g9" y="2465"/><use xlink:href="#g10" y="2482"/><rect x="0" y="2499" width="8" height="17" class="foreground"/><use xlink:href="#g2" y="2499"/></g><g><use xlink:href="#g1" y="2652"/><use xlink:href="#g3" y="2686"/><use xlink:href="#g4" y="2703"/><use xlink:href="#g5" y="2720"/><use xlink:href="#g7" y="2737"/><use xlink:href="#g8" y="2754"/><use xlink:href="#g9" y="2771"/><use xlink:href="#g10" y="2788"/><use xlink:href="#g11" y="2805"/><use xlink:href="#g8" y="2822"/><use xlink:href="#g9" y="2839"/><use xlink:href="#g10" y="2856"/><use xlink:href="#g12" y="2873"/><use xlink:href="#g8" y="2890"/><use xlink:href="#g9" y="2907"/><use xlink:href="#g10" y="2924"/><use xlink:href="#g3" y="2958"/><use xlink:href="#g13" y="2975"/><rect x="16" y="2992" width="8" height="17" class="foreground"/><use xlink:href="#g14" y="2992"/></g><g><use xlink:href="#g1" y="3094"/><use xlink:href="#g3" y="3128"/><use xlink:href="#g4" y="3145"/><use xlink:href="#g5" y="3162"/><use xlink:href="#g7" y="3179"/><use xlink:href="#g8" y="3196"/><use xlink:href="#g9" y="3213"/><use xlink:href="#g10" y="3230"/><use xlink:href="#g11" y="3247"/><use xlink:href="#g8" y="3264"/><use xlink:href="#g9" y="3281"/><use xlink:href="#g10" y="3298"/><use xlink:href="#g12" y="3315"/><use xlink:href="#g8" y="3332"/><use xlink:href="#g9" y="3349"/><use xlink:href="#g10" y="3366"/><use xlink:href="#g3" y="3400"/><use xlink:href="#g13" y="3417"/><rect x="48" y="3434" width="8" height="17" class="foreground"/><use xlink:href="#g15" y="3434"/></g><g><use xlink:href="#g1" y="3536"/><use xlink:href="#g3" y="3570"/><use xlink:href="#g4" y="3587"/><use xlink:href="#g5" y="3604"/><use xlink:href="#g7" y="3621"/><use xlink:href="#g8" y="3638"/><use xlink:href="#g9" y="3655"/><use xlink:href="#g10" y="3672"/><use xlink:href="#g11" y="3689"/><use xlink:href="#g8" y="3706"/><use xlink:href="#g9" y="3723"/><use xlink:href="#g10" y="3740"/><use xlink:href="#g12" y="3757"/><use xlink:href="#g8" y="3774"/><use xlink:href="#g9" y="3791"/><use xlink:href="#g10" y="3808"/><use xlink:href="#g3" y="3842"/><use xlink:href="#g13" y="3859"/><use xlink:href="#g16" y="3876"/><rect x="0" y="3893" width="8" height="17" class="foreground"/><use xlink:href="#g2" y="3893"/></g></g></svg>
    <text id="timer" class="foreground">0:00/0:00</text>
    <!-- Invisible, wider track to make frame seeking easier -->
    <use xlink:href="#slider_wide_track" id="wide_track" class="background"/>
    <!-- Visible track -->
    <use xlink:href="#slider_track" id="track" class="foreground"/>
    <use xlink:href="#slider_button" id="slider_1"/>
    <use xlink:href="#icon-play" id="play-button" class="foreground"/>
    <use xlink:href="#icon-pause" id="pause-button" class="foreground"/>
    <script type="text/javascript" id="generated-js"><![CDATA[
        var termtosvg_vars = {
            transforms: [
                {transform: 'translate3D(0, 0px, 0)', easing: 'steps(1, end)'},
{transform: 'translate3D(0, -442px, 0)', easing: 'steps(1, end)', offset: 0.031},
{transform: 'translate3D(0, -884px, 0)', easing: 'steps(1, end)', offset: 0.032},
{transform: 'translate3D(0, -1326px, 0)', easing: 'steps(1, end)', offset: 0.554},
{transform: 'translate3D(0, -1768px, 0)', easing: 'steps(1, end)', offset: 0.555},
{transform: 'translate3D(0, -2210px, 0)', easing: 'steps(1, end)', offset: 0.555},
{transform: 'translate3D(0, -2652px, 0)', easing: 'steps(1, end)', offset: 0.616},
{transform: 'translate3D(0, -3094px, 0)', easing: 'steps(1, end)', offset: 0.667},
{transform: 'translate3D(0, -3536px, 0)', easing: 'steps(1, end)', offset: 0.668},
{transform: 'translate3D(0, -3536px, 0)', easing: 'steps(1, end)'}
            ],
            timings: {
                duration: 30098,
                iterations: Infinity
            }
        };]]></script>
    <script type="text/javascript">
var animation = document.getElementById("screen_view").animate(
    termtosvg_vars.transforms,
    termtosvg_vars.timings
)
var terminal   = document.getElementById('terminal')
var play_button = terminal.getElementById('play-button');
var pause_button = terminal.getElementById('pause-button');
var is_playing = true;

animation.onfinish = function() {
  play_button.setAttribute('display', 'inline')
  pause_button.setAttribute('display', 'none')
  is_playing = false;
};

function togglePlayPause() {
    if (is_playing) {
      animation.pause()
      play_button.setAttribute('display', 'inline')
      pause_button.setAttribute('display', 'none')
      is_playing = false
    } else {
      animation.play()
      play_button.setAttribute('display', 'none')
      pause_button.setAttribute('display', 'inline')
      is_playing = true
    }
};

play_button.addEventListener('click', togglePlayPause, false)
pause_button.addEventListener('click', togglePlayPause, false)


var style = getComputedStyle(terminal);
var animation_duration = termtosvg_vars.timings.duration / 1000
var timer = terminal.getElementById('timer')

function timer_from_seconds(t) {
    minutes = Math.floor(t / 60);
    seconds = Math.floor(t % 60);
    return minutes + ':' + ("0" + seconds).slice(-2)
}
function update_timer() {
    var current_time = (animation.currentTime / 1000) % animation_duration
    timer.textContent =  timer_from_seconds(current_time) + "/" + timer_from_seconds(animation_duration)
}
setInterval(update_timer, "100ms")




var slider_1  = terminal.getElementById('slider_1');
function getTranslateX(elem) {
  var style = window.getComputedStyle(elem);
  var matrix = new WebKitCSSMatrix(style.webkitTransform);
  return parseInt(matrix.m41)
}

var limitLower = parseInt(getTranslateX(terminal.getElementById('track')));
var limitUpper = limitLower + parseInt(terminal.getElementById('track').getBoundingClientRect().width) - 8

// Return X position for an event
function mx(evt){
    var pt = terminal.createSVGPoint();
    pt.x = evt.clientX;
    return pt.matrixTransform(terminal.getScreenCTM().inverse());
}

// Set the current time of the animation to get the slider button under the cursor
var move = function(evt){
    var cursor_position = mx(evt);
    if ( cursor_position.x &lt; limitLower || cursor_position.x &gt; limitUpper ) {
        return;
    }
    animation.currentTime = animation_duration * 1000 * (cursor_position.x - limitLower) / (limitUpper - limitLower)
};

// Move the slider button to the cursor position when a click happens on the track of the slider
terminal.getElementById('wide_track').addEventListener('click', move, false);
terminal.getElementById('track').addEventListener('click', move, false);

// Enable slider button dragging along the track
var dragging = false;
slider_1.addEventListener('mousedown',function(evt){
        if (is_playing) {
            animation.pause()
            play_button.setAttribute('display', 'inline')
            pause_button.setAttribute('display', 'none')
        }

        dragging = true;
        terminal.addEventListener('mousemove', move, false);
        document.documentElement.addEventListener('mouseup', function(){
                dragging = false;
                if (is_playing) {
                    animation.play()
                    play_button.setAttribute('display', 'none')
                    pause_button.setAttribute('display', 'inline')
                }
                terminal.removeEventListener('mousemove', move, false);
        }, false);
}, false);

function update_slider_button() {
    var current_time = (animation.currentTime / 1000) % animation_duration
    var current_position = limitLower + (limitUpper - limitLower) * current_time / animation_duration
    slider_1.setAttribute('x', parseInt(current_position)+'px')
}

setInterval(update_slider_button, "100ms")
</script>
</svg>